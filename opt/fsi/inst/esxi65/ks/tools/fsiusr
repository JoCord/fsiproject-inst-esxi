#!/bin/sh
#
#   manage local user
#
#   This program is free software; you can redistribute it and/or modify it under the 
#   terms of the GNU General Public License as published by the Free Software Foundation;
#   either version 3 of the License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
#   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
#   See the GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License along with this program; 
#   if not, see <http://www.gnu.org/licenses/>.
#
ver="1.00.00 - 23.5.2014"
retc=0
ls=""
me=`basename $0`
mounted=0

if [ -f /store/fsi/viconf.sh ] ; then
    . /store/fsi/viconf.sh
else
    echo "ERROR cannot set vi conf variables"
    exit 99
fi
if [ -f /store/fsi/fsifunc.sh ] ; then
    . /store/fsi/fsifunc.sh
else
    echo "ERROR cannot load vi functions"
    exit 99
fi

# add
# del

 
PATH=/bin:/sbin

 

iap_user='iap'

iap_shadow_hash='$1$5E8EQr81$LjqxHY\/Hvo3wKJm.9RG2u\/'    # hash generated by Frank Eschenfelder
cpass=$(/usr/bin/openssl passwd -1 $pw)

iap_role='IAP'

managed_entity="vim.Folder:ha-folder-root"

 

privileges="Host.Config.Maintenance
   Host.Config.Power
   VirtualMachine.Interact.ConsoleInteract
   VirtualMachine.Interact.PowerOff
   VirtualMachine.Interact.PowerOn
   VirtualMachine.Interact.Reset"

 

if grep -q "^$iap_user:" /etc/passwd; then
   echo User $iap_user already exists
else
   echo User $iap_user does not exist
   useradd -M -d / -c "Incidents+Problems" -s /sbin/nologin $iap_user
fi


if grep -q "^$iap_user:" /etc/shadow; then

   sed -i "s/^$iap_user:\([^:]*\):/$iap_user:$iap_shadow_hash:/" /etc/shadow

else

   echo No entry for user $iap_user in /etc/shadow

fi

 

# clean up environment before calling the adds because repeated calls to role_add

# add roles with the same name over and over again. The order of the calls is

# important: first remove permissions, then the role

vim-cmd vimsvc/auth/entity_permission_remove $managed_entity $iap_user >/dev/null 2>&1

vim-cmd vimsvc/auth/role_remove $iap_role >/dev/null 2>&1

vim-cmd vimsvc/auth/role_add $iap_role $privileges

vim-cmd vimsvc/auth/entity_permission_add $managed_entity $iap_user false $iap_role true

 